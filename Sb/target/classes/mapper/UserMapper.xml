<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.mapper.UserMapper">
    
    <resultMap id="UserResultMap" type="com.library.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="realName" column="real_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="userType" column="user_type"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    
    <select id="findByUsername" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username}
    </select>
    
    <select id="findByUsernameAndPassword" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username} AND password = #{password}
    </select>
    
    <insert id="insert" parameterType="com.library.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, real_name, email, phone, user_type, status, create_time, update_time)
        VALUES (#{username}, #{password}, #{realName}, #{email}, #{phone}, #{userType}, #{status}, #{createTime}, #{updateTime})
    </insert>
    
    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM users WHERE id = #{id}
    </select>
    
    <update id="update" parameterType="com.library.entity.User">
        UPDATE users SET
        real_name = #{realName},
        email = #{email},
        phone = #{phone},
        update_time = #{updateTime}
        WHERE id = #{id}
    </update>
    
    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>
    
    <select id="findByPage" resultMap="UserResultMap">
        SELECT * FROM users
        <where>
            <if test="keyword != null and keyword != ''">
                AND (username LIKE CONCAT('%', #{keyword}, '%') 
                OR real_name LIKE CONCAT('%', #{keyword}, '%')
                OR email LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="userType != null">
                AND user_type = #{userType}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>
    
    <select id="countUsers" resultType="int">
        SELECT COUNT(*) FROM users
        <where>
            <if test="userType != null">
                AND user_type = #{userType}
            </if>
        </where>
    </select>
    
    <update id="updateStatus">
        UPDATE users SET status = #{status}, update_time = NOW() WHERE id = #{id}
    </update>
    
</mapper>